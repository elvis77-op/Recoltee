import SQLite from 'react-native-sqlite-storage';

const db = SQLite.openDatabase(
  { name: 'mydb.db', location: 'default' },
  () => { console.log('‚úÖ Database opened'); },
  error => { console.log('‚ùå Database error: ', error); }
);

// ÂàùÂßãÂåñÊï∞ÊçÆÂ∫ìÔºåÂàõÂª∫ notes Ë°®
export const initDB = () => {
  db.transaction(tx => {
    tx.executeSql(
      `CREATE TABLE IF NOT EXISTS notes (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        title TEXT,
        content TEXT
      );`
    );
  });
};

export const editNote = (id, title, content, callback) => {
  db.transaction(tx => {
    tx.executeSql(
      'UPDATE notes SET title = ?, content = ? WHERE id = ?;',[title, content, id],
      () => {
        console.log('‚úÖ Note edited');
        callback(true);    // ÈÄöÁü•Ë∞ÉÁî®ËÄÖÊàêÂäü
      },
      error => {
        console.log('‚ùå Edit note error:', error);
        callback(false);
      }
    );
  });
}

// Ê∑ªÂä†Á¨îËÆ∞
export const addNote = (title, content, callback) => {
  db.transaction(tx => {
    tx.executeSql(
      'INSERT INTO notes (title, content) VALUES (?, ?);',
      [title, content],
      () => {
        console.log('‚úÖ Note added');
        callback(true);    // ÈÄöÁü•Ë∞ÉÁî®ËÄÖÊàêÂäü
      },
      error => {
        console.log('‚ùå Add note error:', error);
        callback(false);
      }
    );
  });
};

// Ëé∑ÂèñÊâÄÊúâÁ¨îËÆ∞
export const getNotes = (callback) => {
  db.transaction(tx => {
    tx.executeSql(
      'SELECT * FROM notes;',
      [],
      (txObj, results) => {
        let data = [];
        for (let i = 0; i < results.rows.length; i++) {
          data.push(results.rows.item(i));
        }
        callback(data);   // ÊääÊü•ËØ¢ÁªìÊûú‰º†ÁªôÂõûË∞É
      },
      error => {
        console.log('‚ùå Get notes error:', error);
      }
    );
  });
};

// Âà†Èô§Á¨îËÆ∞
export const deleteNote = (id, callback) => {
  db.transaction(tx => {
    tx.executeSql(
      'DELETE FROM notes WHERE id = ?;',
      [id],
      () => {
        console.log('üóëÔ∏è Note deleted');
        callback(true);
      },
      error => {
        console.log('‚ùå Delete note error:', error);
        callback(false);
      }
    );
  });
};
